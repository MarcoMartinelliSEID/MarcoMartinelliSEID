


    row1 = [''] * 32
    row2 = [''] * 32
    row3 = [''] * 32
    row4 = [''] * 32
    row5 = [''] * 32
    row6 = [''] * 32
    row7 = [''] * 32
    row8 = [''] * 32
    row9 = [''] * 32
    row10 = [''] * 32
    row11 = [''] * 32
    row12 = [''] * 32
    row13 = [''] * 32
    row14 = [''] * 32
    row15 = [''] * 32
    row16 = [''] * 32
    row17 = [''] * 32
    row18 = [''] * 32
    row19 = [''] * 32
    row20 = [''] * 32
    row21 = [''] * 32
    row22 = [''] * 32
    row23 = [''] * 32
    row24 = [''] * 32
    row25 = [''] * 32

    self.total_rows = [self.raw1, self.raw2 , self.raw3, self.raw4, self.raw5, self.raw6 , self.raw7, self.raw8 , self.raw9, self.raw10, self.raw11, self.raw12, self.raw13, self.raw14, self.raw15, self.raw16 , self.raw17, self.raw18, self.raw19, self.raw20 , self.raw21, self.raw22, self.raw23, self.raw24, self.raw25]


'''
    def defineStructure(self):
        if(self.analog_input.sp_hihi != 'None'):
            self.in_num+=2
            self.out_num+=2
            if(self.bypass_hihi):
                self.in_num+=1
        if(self.analog_input.sp_hi != 'None'):
            self.num+=1
            if(self.bypass_hi):
                self.in_num+=1
        if(self.analog_input.sp_low != 'None'):
            self.num+=1
            if(self.bypass_low):
                self.in_num+=1
        if(self.analog_input.sp_lowlow != 'None'):
            self.num+=1
            if(self.bypass_lowlow):
                self.in_num+=1
        if(self.mos):
            self.num+=1
        if(self.safety):
            self.num+=1
        
    def buildStructure(self):
        #INDEX + GRUPPO
        global index_number
        i=0; j=0
        while i < len(self.total_rows):
            index_number += 1
            self.total_rows[i][0] = 'AI_INDEX_' + index_number
            self.total_rows[i][2] = self.analog_input.tag_number
            i+=1
        #PIN_type
    

    def process1(self):        
        row[3], row[4] = self.analog_input.getTagSplitted()
        row[5] = self.analog_input.tag_number + 'A'
        row[6] = 'AI'
        row[7] = 'SEID_AI_Dynamic_V3'
        row[8] = 'SEID_DIN_AI_15'
        row[9], row[10] = self.analog_input.getDescSplitted()
        row[16] = 'Analog'
        row[17] = 'Signal'
        row[23] = 'Inp_PVA'
        row[26] = 'Signal'
        row[27] = 'Signal'
        row[28] = 'Signal'
    '''